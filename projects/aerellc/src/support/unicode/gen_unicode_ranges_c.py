# generate_unicode_tables.py

import requests, os

ROOT_PATH = os.path.dirname(os.path.abspath(__file__))

def parse_ranges(filename, prop_name):
    ranges = []
    with open(filename, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if not line or line.startswith('#'):
                continue
            if f'; {prop_name}' in line:
                parts = line.split(';')[0].strip()
                if '..' in parts:
                    start, end = parts.split('..')
                    ranges.append((int(start, 16), int(end, 16)))
                else:
                    val = int(parts, 16)
                    ranges.append((val, val))
    return ranges

def generate_c_array(ranges, array_name):
    lines = [f'// Generated ranges for {array_name}', f'const uint32_range_t {array_name}_ranges[] = {{']
    for start, end in ranges:
        lines.append(f'    {{0x{start:X}, 0x{end:X}}},')
    lines.append('};')
    lines.append(f'const size_t {array_name}_ranges_count = (sizeof({array_name}_ranges)/sizeof({array_name}_ranges[0]));\n\n')
    return '\n'.join(lines)

if __name__ == '__main__':
    # Download DerivedCoreProperties.txt and PropList.txt
    FILE1_NAME = 'DerivedCoreProperties.txt'
    FILE2_NAME = 'PropList.txt'

    FILE1_URL = 'https://www.unicode.org/Public/UCD/latest/ucd/' + FILE1_NAME
    FILE2_URL = 'https://www.unicode.org/Public/UCD/latest/ucd/' + FILE2_NAME

    FILE1_PATH = ROOT_PATH + '/' + FILE1_NAME
    FILE2_PATH = ROOT_PATH + '/' + FILE2_NAME

    files = [
        {
            'url': FILE1_URL,
            'path': FILE1_PATH
        },
        {
            'url': FILE2_URL,
            'path': FILE2_PATH
        }
    ]

    for file in files:
        req = requests.get(file['url'])
        with open(file=file['path'], mode='wb') as file:
            file.write(req.content)

    # XID tables
    xid_start = parse_ranges(FILE1_PATH, 'XID_Start')
    xid_continue = parse_ranges(FILE1_PATH, 'XID_Continue')
    
    # Whitespace
    whitespace = parse_ranges(FILE2_PATH, 'White_Space')
    
    with open(ROOT_PATH + '/' + 'unicode_ranges.c', 'w', encoding='utf-8') as f:
        f.write('// Code generated by "gen_unicode_ranges_c.py". DO NOT EDIT.\n\n')
        f.write('#include "support/unicode/unicode_ranges.h"\n\n')
        f.write(generate_c_array(xid_start, 'xid_start'))
        f.write(generate_c_array(xid_continue, 'xid_continue'))
        f.write(generate_c_array(whitespace, 'whitespace'))
    
    print('unicode_ranges.c generated!')